name: Deploy on push to main

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: [self-hosted]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Copy environment variables to .env file
      run: |
        echo "CELERY_BROKER_URL=${{ DEPLOY.CELERY_BROKER_URL }}" >> .env
        echo "CELERY_RESULT_BACKEND=${{ DEPLOY.CELERY_RESULT_BACKEND }}" >> .env
        echo "CORS_ALLOWED_ORIGINS=${{ DEPLOY.CORS_ALLOWED_ORIGINS }}" >> .env
        echo "CSRF_TRUSTED_ORIGINS=${{ DEPLOY.CSRF_TRUSTED_ORIGINS }}" >> .env
        echo "DATABASES_HOST=${{ DEPLOY.DATABASES_HOST }}" >> .env
        echo "POSTGRES_DB=${{ DEPLOY.POSTGRES_DB }}" >> .env
        echo "POSTGRES_PASSWORD=${{ DEPLOY.POSTGRES_PASSWORD }}" >> .env
        echo "POSTGRES_USER=${{ DEPLOY.POSTGRES_USER }}" >> .env
        echo "SECRET_KEY=${{ DEPLOY.SECRET_KEY }}" >> .env
        echo "TELEGRAM_TOKEN=${{ DEPLOY.TELEGRAM_TOKEN }}" >> .env
        echo "TELEGRAM_URL=${{ DEPLOY.TELEGRAM_URL }}" >> .env
      env:
        CELERY_BROKER_URL: ${{ DEPLOY.CELERY_BROKER_URL }}
        CELERY_RESULT_BACKEND: ${{ DEPLOY.CELERY_RESULT_BACKEND }}
        CORS_ALLOWED_ORIGINS: ${{ DEPLOY.CORS_ALLOWED_ORIGINS }}
        CSRF_TRUSTED_ORIGINS: ${{ DEPLOY.CSRF_TRUSTED_ORIGINS }}
        DATABASES_HOST: ${{ DEPLOY.DATABASES_HOST }}
        POSTGRES_DB: ${{ DEPLOY.POSTGRES_DB }}
        POSTGRES_PASSWORD: ${{ DEPLOY.POSTGRES_PASSWORD }}
        POSTGRES_USER: ${{ DEPLOY.POSTGRES_USER }}
        SECRET_KEY: ${{ DEPLOY.SECRET_KEY }}
        TELEGRAM_TOKEN: ${{ DEPLOY.TELEGRAM_TOKEN }}
        TELEGRAM_URL: ${{ DEPLOY.TELEGRAM_URL }}

    - name: Pull latest project version from repository
      run: git pull origin main

    - name: Run Docker Compose
      run: |
        sudo docker compose down
        sudo docker system prune
        sudo docker compose up -d --build
